// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TextInput renders correctly 1`] = `
.c0 {
  width: 100%;
  height: 100%;
  padding: 0.8em;
  font-size: 100%;
  color: #5c5c5c;
  border-radius: 6px;
  border: 2px solid #5c5c5c;
  -webkit-transition: box-shadow 400ms ease-in-out;
  transition: box-shadow 400ms ease-in-out;
}

.c0:focus {
  outline: none;
  box-shadow: 0 0 3px 1px #5c5c5c;
}

.c0:-moz-read-only {
  background-color: hsl(0,0%,95%);
  color: #aaaaaa;
}

.c0:read-only {
  background-color: hsl(0,0%,95%);
  color: #aaaaaa;
}

<_default
  placeholder="This is a test text area"
>
  <styled.input
    formikForm={Object {}}
    onBlur={[Function]}
    onChange={[Function]}
    outlineColor="lightBlack"
    placeholder="This is a test text area"
    type="text"
    value=""
  >
    <StyledComponent
      formikForm={Object {}}
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bdVaJa",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  width: 100%;
  height: 100%;
  padding: ",
              [Function],
              ";

  font-size: 100%;
  color: ",
              [Function],
              ";

  border-radius: ",
              [Function],
              ";
  border: ",
              [Function],
              ";

  transition: box-shadow 400ms ease-in-out;
  &:focus {
    outline: none;
    box-shadow: ",
              [Function],
              ";
  }

  &:read-only {
    background-color: hsl(0,0%,95%);
    color: ",
              [Function],
              ";
  }
",
            ],
          },
          "displayName": "styled.input",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bdVaJa",
          "target": "input",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      onBlur={[Function]}
      onChange={[Function]}
      outlineColor="lightBlack"
      placeholder="This is a test text area"
      type="text"
      value=""
    >
      <input
        className="c0"
        onBlur={[Function]}
        onChange={[Function]}
        placeholder="This is a test text area"
        type="text"
        value=""
      />
    </StyledComponent>
  </styled.input>
</_default>
`;
