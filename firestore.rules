service cloud.firestore {
  match /databases/{database}/documents {

    match /users/{userId} {
      allow read, update, delete: if request.auth.uid == userId &&
      													  request.resource.data.role == resource.data.role;
      allow create: if request.auth.uid == userId &&
      								 request.data.role == "HACKER";


      allow read: if request.auth.uid != null &&
                      			get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "VOLUNTEER";
    	allow update: if request.auth.uid != null &&
      								 get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "VOLUNTEER" &&
                    	 request.writeFields.size() == 1 &&
               				 request.writeFields.hasOnly(['checkedIn']);


      allow read, write: if request.auth.uid != null &&
                     			  get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "ORGANIZER";

    }

    match /applications/{applicationId} {
      allow read: if request.auth.uid == applicationId;
      allow create: if request.auth.uid == applicationId &&
      								 get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "HACKER" &&
      								 !request.resource.data.reviews &&
                       !request.resource.data.reviewCount;
      allow update: if request.auth.uid == applicationId &&
      								 get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "HACKER" &&
                       !resource.data.submitted &&
      								 request.resource.data.reviews == resource.data.reviews &&
                       request.resource.data.reviewCount == resource.data.reviewCount;

      allow read: if request.auth.uid != null &&
      							 get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "ORGANIZER";
    	allow update: if request.auth.uid != null &&
      								 get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "ORGANIZER" &&
                    	 request.writeFields.size() == 2 &&
               				 request.writeFields.hasOnly(['reviewCount', 'reviews']);
    }

    match /events/{event} {
      allow read;
      allow write: if request.auth.uid != null &&
      								get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "ORGANIZER";
    }
  }
}
